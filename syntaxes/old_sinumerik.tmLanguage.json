{
    "scopeName": "source.old_sinumerik",
    "name": "Sinumerik CNC Syntax",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#speedsfeeds"
        },
        {
            "include": "#prognumbers"
        },
        {
            "include": "#coords"
        },
        {
            "include": "#tools"
        },
        {
            "include": "#modifiers"
        },
        {
            "include": "#macrovars"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#operators"
        }
    ],

    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.old_sinumerik",
                    "begin": "\\s*\\((?!\\$)",
                    "end": "\\n"
                },
                {
                    "name": "comment.old_sinumerik",
                    "begin": "\\s*/\\s*(?!\\$)",
                    "end": "\\n"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "[gG][0-9]{1,3}",
                    "name": "markup.bold.old_sinumerik"
                },
                {
                    "match": "[mM][0-9]{1,3}",
                    "name": "keyword.operator.quantifier.regexp.old_sinumerik"
                },
                {
                    "match": "\\b(GOTO|GOTOF|GOTOB|IF|ELSE|ENDIF|DO|WHILE|END|SWITCH|CASE|OF)\\b",
                    "name": "keyword.control.old_sinumerik"
                },
                {
                    "match": "\\b(EQ|NE|LT|GT|LE|GE|AND|OR|XOR|B_AND|B_OR|B_XOR|NOT)\\b",
                    "name": "keyword.control.old_sinumerik"
                },
                {
                    "match": "\\b(TRUE|FALSE)\\b",
                    "name": "keyword.control.old_sinumerik"
                },
                {
                    "match": "\\b(SUPA|TRANS|TRAFOOF|TRAORI|CDON|ROT|BLUM|MSG)\\b",
                    "name": "keyword.control.old_sinumerik"
                },
                {
                    "match": "(EXTCALL)",
                    "name": "invalid.old_sinumerik"
                },
                {
                    "match": "\\b(DISPLOF|SBLOF|CALL|STOPRE|INT|REAL|CHAR|STRING|FRAME|DEF|PROC|RET|WHEN|WHENEVER|EVERY|DO|TRUE|FALSE)\\b",
					"name": "entity.name.tag.old_sinumerik"
				}
            ]
        },
        "operators": {
            "patterns": [
                {
                    "match": "(SIN)|(COS)|(TAN)|(ASIN)|(ACOS)|(ATAN)|(LN)|(SQRT)|(MOD)|(EXP)|(TRUNC)|(POT)",
                    "name": "support.constant.math.old_sinumerik"
                },
                {
                    "match": "(FIX)|(FUP)|(ROUND)|(ABS)",
                    "name": "support.constant.math.old_sinumerik"
                },
                {
                    "match": "(\\+)|(\\*)|(\\/)|(\\*\\*)|(\\-)|(==)|(<>)|(>=)|(<=)|(<)|(>)|(=)",
                    "name": "support.constant.math.old_sinumerik"
                },
                {
                    "match": "(\\-)",
                    "name": "invalid.old_sinumerik"
                },
                {
                    "match":"\\b(FINEMI_.*)|(HALFM.*)|(FASTM.*)",
                    "name":"keyword.control.old_sinumerik"
                },
                {
					"name": "string.regexp.old_sinumerik",
					"match": "(\\$)[_a-zA-Z]+"
				},
				{
					"name": "entity.name.class.old_sinumerik",
					"match": "[_a-zA-Z]+[_a-zA-Z]+"
				},
				{
					"name": "string.regexp.old_sinumerik",
					"match": "[_a-zA-Z]+"
				}
            ]
        },
        "speedsfeeds": {
            "patterns": [
                {
                    "match": "([sS])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.language.old_sinumerik"
                },
                {
                    "match": "([fF])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.language.old_sinumerik"
                }
            ]
        },
        "prognumbers": {
            "patterns": [
                {
                    "match": "[nN][0-9]+",
                    "name": "constant.numeric.old_sinumerik"
                },
                {
                    "match": "[lL][0-9]{1,5}",
                    "name": "string.regexp.old_sinumerik"
                },
                {
                    "match": "[gG][0-3]",
                    "name": "string.regexp.old_sinumerik"
                },
                {
                    "match": "[pP][0-9]{1,5}",
                    "name": "string.regexp.old_sinumerik"
                }
            ]
        },
        "coords": {
            "patterns": [
                {
                    "match": "([xXyYzZiIjJkKwW])(?=-|\\+|\\d|\\[|#)(-|\\+)?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "string.old_sinumerik"
                },
                {
                    "match": "([aAbBcC])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.character.escape.old_sinumerik"
                }
            ]
        },
        "tools": {
            "patterns": [
                {
                    "match": "([dD])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.character.old_sinumerik"
                },
                {
                    "match": "([hH])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.character.old_sinumerik"
                },
                {
                    "match": "([tT])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.character.old_sinumerik"
                }
            ]
        },
        "modifiers": {
            "patterns": [
                {
                    "match": "([iIjJkK])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "constant.character.escape.old_sinumerik"
                },
                {
                    "match": "([qQrR])(?=-|\\d|\\[|#)-?(?:\\d+(?:\\.\\d*)?)?",
                    "name": "support.constant.math.old_sinumerik"
                }
            ]
        },
        "macrovars": {
            "patterns": [
                {
                    "match": "[#][0-9]+",
                    "name": "variable.other.old_sinumerik"
                },
                {
                    "match":"^\\s*%(MPF|SPF)\\s*[0-9]+",
                    "name": "variable.other.old_sinumerik"
                }
            ]
        }
    }
}